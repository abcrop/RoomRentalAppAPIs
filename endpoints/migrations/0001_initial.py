# Generated by Django 3.2.4 on 2021-06-06 14:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('username', models.CharField(max_length=20)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('phone_number', models.CharField(blank=True, max_length=10, null=True)),
                ('education', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.CharField(blank=True, max_length=50, null=True)),
                ('occupation', models.CharField(blank=True, max_length=20, null=True)),
                ('user_type', models.CharField(choices=[('LL', 'LANDLORD'), ('TN', 'TENANT'), ('AD', 'ADMIN')], max_length=2)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_blocked', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('category_name', models.CharField(max_length=20, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('house_name', models.CharField(max_length=30, null=True)),
                ('location', models.CharField(max_length=50, null=True)),
                ('longitude', models.FloatField(blank=True, max_length=50, null=True)),
                ('latitude', models.FloatField(blank=True, max_length=50, null=True)),
                ('room_vacent', models.PositiveIntegerField(default=0)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('owner_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RentalData',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('rating', models.PositiveIntegerField()),
                ('rent_paying_interval', models.PositiveIntegerField(default=1)),
                ('last_paid_date', models.DateTimeField(null=True)),
                ('next_payable_date', models.DateTimeField(null=True)),
                ('next_payable_rent', models.FloatField(default=0.0)),
                ('is_active', models.BooleanField(default=False)),
                ('advance_paid_date', models.DateTimeField(blank=True, null=True)),
                ('advance_rent', models.FloatField(default=0.0)),
                ('rent_till_now', models.FloatField(default=0.0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Reward',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('reward_name', models.CharField(max_length=50, null=True)),
                ('occur_after_days', models.PositiveBigIntegerField(default=0)),
                ('reward_point', models.FloatField(choices=[(5.0, 'SIGNUP'), (0.1, 'DAILY'), (10.0, 'RIT'), (7.0, 'L2M'), (15.0, 'LHY'), (30.0, 'L1Y')], default=0.2)),
                ('reward_type', models.CharField(choices=[('FTU', 'FIRST TIME USER'), ('DER', 'DAILY EARNED REWARD'), ('RIT', 'RENT IN TIME'), ('F2M', 'FIRST 2 MONTHS'), ('F4M', 'FIRST 4 MONTHS'), ('LHY', 'LIVED HALF YEAR '), ('F8M', 'FIRST 8 MONTHS'), ('L1Y', 'LIVED 1 YEAR'), ('L2Y', 'LIVED 2 YEAR'), ('L3Y', 'LIVED 3 YEAR'), ('L4Y', 'LIVED 4 YEAR')], max_length=3)),
                ('reoccured_reward', models.PositiveIntegerField(choices=[(0, 'None'), (5, 'RIT-3'), (7, 'RIT-6'), (10, 'RIT-10'), (12, 'RIT-12'), (15, 'RIT-15')], default=0)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('room_name', models.CharField(max_length=50, null=True)),
                ('room_description', models.TextField(null=True)),
                ('room_price', models.PositiveIntegerField()),
                ('room_image', models.ImageField(upload_to='images/')),
                ('ratings', models.PositiveIntegerField(default=0.0)),
                ('is_rented', models.BooleanField(default=False)),
                ('is_internet_available', models.BooleanField(default=False)),
                ('is_price_negotiable', models.BooleanField(default=True)),
                ('parking_type', models.CharField(choices=[('BK', 'BIKE'), ('CR', 'CAR'), ('NO', 'NONE')], max_length=2, null=True)),
                ('room_size', models.PositiveIntegerField()),
                ('room_area', models.PositiveIntegerField()),
                ('room_expires_at', models.DateTimeField(null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('category_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='endpoints.category')),
                ('house_id', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='endpoints.house')),
                ('owner_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RoomRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('request_message', models.CharField(max_length=3000, null=True)),
                ('is_accepted', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('room_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='endpoints.room')),
                ('tenant_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RewardTracker',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('rentalData_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rewards', to='endpoints.rentaldata')),
                ('reward_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='endpoints.reward')),
            ],
        ),
        migrations.AddField(
            model_name='rentaldata',
            name='room_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='endpoints.room'),
        ),
        migrations.AddField(
            model_name='rentaldata',
            name='tenant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('notification_name', models.CharField(max_length=50, null=True)),
                ('notification_message', models.CharField(max_length=3000, null=True)),
                ('notification_type', models.CharField(max_length=20, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=1000, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('room_id', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='features', to='endpoints.room')),
            ],
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('room_id', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='endpoints.room')),
                ('tenant_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
